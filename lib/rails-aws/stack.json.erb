{
 "AWSTemplateFormatVersion" : "2010-09-09",

  "Resources" : {
		"<%= @branch_name + "ec2" %>" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
				"KeyName" : "<%= @branch_name %>",
				"InstanceType": "<%= @instance_type %>",
				"SecurityGroups" : [ { "Ref" : "<%= @branch_name + "sg" %>" } ],
				"ImageId" : "<%= @ami_id %>",
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
            "#!/bin/bash -ex","\n",
            "apt-get update", "\n",
            "apt-get upgrade -y", "\n",
            "export package_list='git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties'", "\n",
            "apt-get install $package_list -y", "\n",
						"apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev -y", "\n",

          "adduser --disabled-password --gecos '' deploy", "\n",
          "mkdir /home/deploy/.ssh", "\n",
          "chown -R deploy:deploy /home/deploy/.ssh", "\n",
					"chmod -R 700 /home/deploy/.ssh", "\n",
          "cp /home/ubuntu/.ssh/authorized_keys /home/deploy/.ssh/authorized_keys", "\n",
          "chown -R deploy:deploy /home/deploy/.ssh/authorized_keys", "\n",
          "chmod 600 /home/deploy/.ssh/authorized_keys", "\n",

 					"sed -i 's/PermitRootLogin\\swithout-password/PermitRootLogin no/' /etc/ssh/sshd_config", "\n",
  				"sed -i 's/UsePAM\\syes/UsePAM no/' /etc/ssh/sshd_config", "\n",
					"service ssh restart", "\n",

            "curl -X PUT -H 'Content-Type:' --data-binary '{\"Status\" : \"SUCCESS\",",
                                                           "\"Reason\" : \"The application myapp is ready\",",
                                                           "\"UniqueId\" : \"myapp\",",
                                                           "\"Data\" : \"Done\"}' ",
																													 "\"", {"Ref" : "WaitForInstanceWaitHandle"},"\"\n" ]]}},
				"Tags": [
					{
						"Key": "Name",
						"Value": "<%= @name %>"
					},
					{
						"Key": "branch_name",
						"Value": "<%= @branch_name %>"
					},
					{
						"Key": "deployer",
						"Value": "<%= ENV["USER"] %>"
					}

				]
      }
    },

    "<%= @branch_name + "sg" %>" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable Access to Rails application via port 80, 443, 3000 and SSH access via port 22",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "3000",
          "ToPort" : "3000",
          "CidrIp" : "0.0.0.0/0"
        }, {
          "IpProtocol" : "tcp",
          "FromPort" : "80",
          "ToPort" : "80",
          "CidrIp" : "0.0.0.0/0"
        } , {
          "IpProtocol" : "tcp",
          "FromPort" : "443",
          "ToPort" : "443",
          "CidrIp" : "0.0.0.0/0"
        }],
				"Tags": [
					{
						"Key": "Name",
						"Value": "<%= @name %>"
					},
					{
						"Key": "branch_name",
						"Value": "<%= @branch_name %>"
					},
					{
						"Key": "deployer",
						"Value": "<%= ENV["USER"] %>"
					}

				]
      }
    },
    "WaitForInstanceWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle",
      "Properties" : {
      }
    },
    "WaitForInstance" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
			"DependsOn" : "<%= @branch_name + "ec2" %>",
      "Properties" : {
        "Handle" : {"Ref" : "WaitForInstanceWaitHandle"},
        "Timeout" : "600"
      }
    }
  },

  "Outputs" : {
    "Login" : {
      "Description" : "The ssh command for the newly created server",
			"Value" : { "Fn::Join" : ["", [ "ssh -i config/keys/<%= @branch_name %>.private_key deploy@", { "Fn::GetAtt" : [ "<%= @branch_name + "ec2" %>", "PublicIp" ] } ]]}
    },
    "WebsiteURL" : {
      "Description" : "The URL for the newly created Rails application",
			"Value" : { "Fn::Join" : ["", [ "http://", { "Fn::GetAtt" : [ "<%= @branch_name + "ec2" %>", "PublicIp" ] }, ":3000" ]]}
    }
  }
}

